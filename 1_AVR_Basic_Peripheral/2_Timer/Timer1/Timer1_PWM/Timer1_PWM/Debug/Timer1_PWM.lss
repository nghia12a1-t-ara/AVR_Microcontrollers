
Timer1_PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000102  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000102  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000134  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000170  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000634  00000000  00000000  000001a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005aa  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000222  00000000  00000000  00000d86  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00000fa8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002f8  00000000  00000000  00000ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000070  00000000  00000000  000012f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001364  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 46 00 	call	0x8c	; 0x8c <main>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <PWM_Init>:
}

void PWM_Set_Duty(uint16_t duty)
{
	OCR1A = duty;
	OCR1B = duty/2;
  6c:	9c 01       	movw	r18, r24
  6e:	8f ef       	ldi	r24, 0xFF	; 255
  70:	81 bb       	out	0x11, r24	; 17
  72:	9f b5       	in	r25, 0x2f	; 47
  74:	92 6a       	ori	r25, 0xA2	; 162
  76:	9f bd       	out	0x2f, r25	; 47
  78:	9e b5       	in	r25, 0x2e	; 46
  7a:	98 61       	ori	r25, 0x18	; 24
  7c:	9e bd       	out	0x2e, r25	; 46
  7e:	37 bd       	out	0x27, r19	; 39
  80:	26 bd       	out	0x26, r18	; 38
  82:	08 95       	ret

00000084 <PWM_Start>:
}

void PWM_Start(void)
{
	TCCR1B |= (1 << CS10);
  84:	8e b5       	in	r24, 0x2e	; 46
  86:	81 60       	ori	r24, 0x01	; 1
  88:	8e bd       	out	0x2e, r24	; 46
  8a:	08 95       	ret

0000008c <main>:
void PWM_Start(void);
void PWM_Set_Duty(uint16_t);

int main(void)
{	
	PWM_Init(2400);		//T = 1200 * 0.125us = 150us = 0.15ms
  8c:	80 e6       	ldi	r24, 0x60	; 96
  8e:	99 e0       	ldi	r25, 0x09	; 9
  90:	0e 94 36 00 	call	0x6c	; 0x6c <PWM_Init>
							// T = period * 0.125us 
}

void PWM_Set_Duty(uint16_t duty)
{
	OCR1A = duty;
  94:	80 e2       	ldi	r24, 0x20	; 32
  96:	93 e0       	ldi	r25, 0x03	; 3
  98:	9b bd       	out	0x2b, r25	; 43
  9a:	8a bd       	out	0x2a, r24	; 42
	OCR1B = duty/2;
  9c:	80 e9       	ldi	r24, 0x90	; 144
  9e:	91 e0       	ldi	r25, 0x01	; 1
  a0:	99 bd       	out	0x29, r25	; 41
  a2:	88 bd       	out	0x28, r24	; 40
int main(void)
{	
	PWM_Init(2400);		//T = 1200 * 0.125us = 150us = 0.15ms
	PWM_Set_Duty(800);	//duty A = 0.15/2, B = 0.15/4
	
	PWM_Start();
  a4:	0e 94 42 00 	call	0x84	; 0x84 <PWM_Start>
  a8:	ff cf       	rjmp	.-2      	; 0xa8 <main+0x1c>

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>
