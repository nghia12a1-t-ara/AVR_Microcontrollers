
TX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000228  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000228  000002bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800070  00800070  000002cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000089b  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000653  00000000  00000000  00000c23  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004df  00000000  00000000  00001276  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00001758  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000037c  00000000  00000000  000017ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002a8  00000000  00000000  00001b68  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00001e10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e2       	ldi	r30, 0x28	; 40
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <main>
  8a:	0c 94 12 01 	jmp	0x224	; 0x224 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <keyfind>:
			OCR1B = 0;
			_delay_ms(1);
		}
		c <<= 1;
	}
}
  92:	30 ef       	ldi	r19, 0xF0	; 240
  94:	2f ef       	ldi	r18, 0xFF	; 255
  96:	9f ee       	ldi	r25, 0xEF	; 239
  98:	6f ed       	ldi	r22, 0xDF	; 223
  9a:	5f eb       	ldi	r21, 0xBF	; 191
  9c:	4f e7       	ldi	r20, 0x7F	; 127
  9e:	3a bb       	out	0x1a, r19	; 26
  a0:	2b bb       	out	0x1b, r18	; 27
  a2:	8b b3       	in	r24, 0x1b	; 27
  a4:	8f 70       	andi	r24, 0x0F	; 15
  a6:	8b bb       	out	0x1b, r24	; 27
  a8:	00 00       	nop
  aa:	89 b3       	in	r24, 0x19	; 25
  ac:	8f 70       	andi	r24, 0x0F	; 15
  ae:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
  b2:	8f 30       	cpi	r24, 0x0F	; 15
  b4:	b1 f7       	brne	.-20     	; 0xa2 <keyfind+0x10>
  b6:	7f ef       	ldi	r23, 0xFF	; 255
  b8:	89 ef       	ldi	r24, 0xF9	; 249
  ba:	e0 e0       	ldi	r30, 0x00	; 0
  bc:	71 50       	subi	r23, 0x01	; 1
  be:	80 40       	sbci	r24, 0x00	; 0
  c0:	e0 40       	sbci	r30, 0x00	; 0
  c2:	e1 f7       	brne	.-8      	; 0xbc <keyfind+0x2a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <keyfind+0x34>
  c6:	00 00       	nop
  c8:	89 b3       	in	r24, 0x19	; 25
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
  d0:	8f 30       	cpi	r24, 0x0F	; 15
  d2:	89 f3       	breq	.-30     	; 0xb6 <keyfind+0x24>
  d4:	7f ef       	ldi	r23, 0xFF	; 255
  d6:	83 ef       	ldi	r24, 0xF3	; 243
  d8:	e1 e0       	ldi	r30, 0x01	; 1
  da:	71 50       	subi	r23, 0x01	; 1
  dc:	80 40       	sbci	r24, 0x00	; 0
  de:	e0 40       	sbci	r30, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <keyfind+0x48>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <keyfind+0x52>
  e4:	00 00       	nop
  e6:	89 b3       	in	r24, 0x19	; 25
  e8:	8f 70       	andi	r24, 0x0F	; 15
  ea:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
  ee:	8f 30       	cpi	r24, 0x0F	; 15
  f0:	11 f3       	breq	.-60     	; 0xb6 <keyfind+0x24>
  f2:	9b bb       	out	0x1b, r25	; 27
  f4:	00 00       	nop
  f6:	89 b3       	in	r24, 0x19	; 25
  f8:	8f 70       	andi	r24, 0x0F	; 15
  fa:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
  fe:	8f 30       	cpi	r24, 0x0F	; 15
 100:	19 f0       	breq	.+6      	; 0x108 <keyfind+0x76>
 102:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <rowloc>
 106:	24 c0       	rjmp	.+72     	; 0x150 <keyfind+0xbe>
 108:	6b bb       	out	0x1b, r22	; 27
 10a:	00 00       	nop
 10c:	89 b3       	in	r24, 0x19	; 25
 10e:	8f 70       	andi	r24, 0x0F	; 15
 110:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
 114:	8f 30       	cpi	r24, 0x0F	; 15
 116:	21 f0       	breq	.+8      	; 0x120 <keyfind+0x8e>
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <rowloc>
 11e:	18 c0       	rjmp	.+48     	; 0x150 <keyfind+0xbe>
 120:	5b bb       	out	0x1b, r21	; 27
 122:	00 00       	nop
 124:	89 b3       	in	r24, 0x19	; 25
 126:	8f 70       	andi	r24, 0x0F	; 15
 128:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
 12c:	8f 30       	cpi	r24, 0x0F	; 15
 12e:	21 f0       	breq	.+8      	; 0x138 <keyfind+0xa6>
 130:	82 e0       	ldi	r24, 0x02	; 2
 132:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <rowloc>
 136:	0c c0       	rjmp	.+24     	; 0x150 <keyfind+0xbe>
 138:	4b bb       	out	0x1b, r20	; 27
 13a:	00 00       	nop
 13c:	89 b3       	in	r24, 0x19	; 25
 13e:	8f 70       	andi	r24, 0x0F	; 15
 140:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
 144:	8f 30       	cpi	r24, 0x0F	; 15
 146:	09 f4       	brne	.+2      	; 0x14a <keyfind+0xb8>
 148:	aa cf       	rjmp	.-172    	; 0x9e <keyfind+0xc>
 14a:	83 e0       	ldi	r24, 0x03	; 3
 14c:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <rowloc>
 150:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 154:	8e 30       	cpi	r24, 0x0E	; 14
 156:	59 f4       	brne	.+22     	; 0x16e <keyfind+0xdc>
 158:	e0 91 71 00 	lds	r30, 0x0071	; 0x800071 <rowloc>
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	ee 0f       	add	r30, r30
 160:	ff 1f       	adc	r31, r31
 162:	ee 0f       	add	r30, r30
 164:	ff 1f       	adc	r31, r31
 166:	e0 5a       	subi	r30, 0xA0	; 160
 168:	ff 4f       	sbci	r31, 0xFF	; 255
 16a:	80 81       	ld	r24, Z
 16c:	08 95       	ret
 16e:	8d 30       	cpi	r24, 0x0D	; 13
 170:	59 f4       	brne	.+22     	; 0x188 <keyfind+0xf6>
 172:	e0 91 71 00 	lds	r30, 0x0071	; 0x800071 <rowloc>
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	ee 0f       	add	r30, r30
 17a:	ff 1f       	adc	r31, r31
 17c:	ee 0f       	add	r30, r30
 17e:	ff 1f       	adc	r31, r31
 180:	e0 5a       	subi	r30, 0xA0	; 160
 182:	ff 4f       	sbci	r31, 0xFF	; 255
 184:	81 81       	ldd	r24, Z+1	; 0x01
 186:	08 95       	ret
 188:	8b 30       	cpi	r24, 0x0B	; 11
 18a:	59 f4       	brne	.+22     	; 0x1a2 <keyfind+0x110>
 18c:	e0 91 71 00 	lds	r30, 0x0071	; 0x800071 <rowloc>
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	ee 0f       	add	r30, r30
 194:	ff 1f       	adc	r31, r31
 196:	ee 0f       	add	r30, r30
 198:	ff 1f       	adc	r31, r31
 19a:	e0 5a       	subi	r30, 0xA0	; 160
 19c:	ff 4f       	sbci	r31, 0xFF	; 255
 19e:	82 81       	ldd	r24, Z+2	; 0x02
 1a0:	08 95       	ret
 1a2:	e0 91 71 00 	lds	r30, 0x0071	; 0x800071 <rowloc>
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	ee 0f       	add	r30, r30
 1aa:	ff 1f       	adc	r31, r31
 1ac:	ee 0f       	add	r30, r30
 1ae:	ff 1f       	adc	r31, r31
 1b0:	e0 5a       	subi	r30, 0xA0	; 160
 1b2:	ff 4f       	sbci	r31, 0xFF	; 255
 1b4:	83 81       	ldd	r24, Z+3	; 0x03
 1b6:	08 95       	ret

000001b8 <PWM_init>:
 1b8:	1f bc       	out	0x2f, r1	; 47
 1ba:	1e bc       	out	0x2e, r1	; 46
 1bc:	8f b5       	in	r24, 0x2f	; 47
 1be:	82 60       	ori	r24, 0x02	; 2
 1c0:	8f bd       	out	0x2f, r24	; 47
 1c2:	8e b5       	in	r24, 0x2e	; 46
 1c4:	88 61       	ori	r24, 0x18	; 24
 1c6:	8e bd       	out	0x2e, r24	; 46
 1c8:	8f b5       	in	r24, 0x2f	; 47
 1ca:	80 62       	ori	r24, 0x20	; 32
 1cc:	8f bd       	out	0x2f, r24	; 47
 1ce:	8e b5       	in	r24, 0x2e	; 46
 1d0:	81 60       	ori	r24, 0x01	; 1
 1d2:	8e bd       	out	0x2e, r24	; 46
 1d4:	85 ea       	ldi	r24, 0xA5	; 165
 1d6:	91 e0       	ldi	r25, 0x01	; 1
 1d8:	97 bd       	out	0x27, r25	; 39
 1da:	86 bd       	out	0x26, r24	; 38
 1dc:	08 95       	ret

000001de <UART_Init>:

void UART_Init()
{
	UBRRL = 102;
 1de:	86 e6       	ldi	r24, 0x66	; 102
 1e0:	89 b9       	out	0x09, r24	; 9
	UCSRB |= (1 << RXEN) | (1 << TXEN) | (1 << RXCIE);
 1e2:	8a b1       	in	r24, 0x0a	; 10
 1e4:	88 69       	ori	r24, 0x98	; 152
 1e6:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << UCSZ1) | (1 << UCSZ0);						//Baud = 9600, U2X = 0, F = 16MHz
 1e8:	80 b5       	in	r24, 0x20	; 32
 1ea:	86 60       	ori	r24, 0x06	; 6
 1ec:	80 bd       	out	0x20, r24	; 32
 1ee:	08 95       	ret

000001f0 <UART_Write_Chr>:
}

void UART_Write_Chr(char c)
{
	while(bit_is_clear(UCSRA, UDRE));
 1f0:	5d 9b       	sbis	0x0b, 5	; 11
 1f2:	fe cf       	rjmp	.-4      	; 0x1f0 <UART_Write_Chr>
	UDR = c;
 1f4:	8c b9       	out	0x0c, r24	; 12
 1f6:	08 95       	ret

000001f8 <main>:
void UART_Write_Chr(char);
void UART_Write_Str(char*);

int main(void)
{
	UART_Init();
 1f8:	0e 94 ef 00 	call	0x1de	; 0x1de <UART_Init>
	
	DDRD |= (1 << DDD4);			
 1fc:	8c 9a       	sbi	0x11, 4	; 17
	PORTD &= ~(1 << PORTD4);
 1fe:	94 98       	cbi	0x12, 4	; 18
	DDRD &= ~(1 << DDD2);
 200:	8a 98       	cbi	0x11, 2	; 17
	PORTD |= (1 << PORTD2);	
 202:	92 9a       	sbi	0x12, 2	; 18
	
	UART_Init();
 204:	0e 94 ef 00 	call	0x1de	; 0x1de <UART_Init>
	PWM_init();
 208:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <PWM_init>
	OCR1B = 210;
 20c:	82 ed       	ldi	r24, 0xD2	; 210
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	99 bd       	out	0x29, r25	; 41
 212:	88 bd       	out	0x28, r24	; 40
	
	UART_Write_Chr('1');
 214:	81 e3       	ldi	r24, 0x31	; 49
 216:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <UART_Write_Chr>
	
	while(1)
	{
		UART_Write_Chr(keyfind());
 21a:	0e 94 49 00 	call	0x92	; 0x92 <keyfind>
 21e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <UART_Write_Chr>
 222:	fb cf       	rjmp	.-10     	; 0x21a <main+0x22>

00000224 <_exit>:
 224:	f8 94       	cli

00000226 <__stop_program>:
 226:	ff cf       	rjmp	.-2      	; 0x226 <__stop_program>
